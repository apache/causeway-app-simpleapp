name: Maven Build and Test

on:
  workflow_dispatch:
  push:
    branches:
      - jdo
      - jpa
      - jdo-SNAPSHOT
      - jpa-SNAPSHOT
  pull_request:
    branches:
      - jdo
      - jpa
      - jdo-SNAPSHOT
      - jpa-SNAPSHOT

jobs:
  build:
    name: Build, Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java-version:
          - 11
          - 15

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2.3.3

    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java-version }}

    - name: Print Maven Version
      run: mvn --version

    - name: Activate Cache for Maven Downloads
      uses: actions/cache@v2
      env:
        cache-name: cache-maven-modules
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Calculate $REVISION
      id: revision
      shell: bash
      run: |
        if [[ $GITHUB_REF =~ .*-SNAPSHOT ]]
        then
          PARENT=$(curl -X GET "https://nexus.incode.work/service/rest/v1/search?sort=version&repository=nightly-builds&group=org.apache.isis.app&name=isis-app-starter-parent" -H "accept: application/json" -s | jq '.items[0].version' | sed 's/"//g')
          echo "parentVersion = $PARENT"
          mvn versions:update-parent -DparentVersion="[$PARENT]"
        fi
        BASELINE=$(cat pom.xml | grep "<version>" | head -1 | awk -F'>' '{print $2}' | awk -F'<' '{print $1}')
        SHA_ID=$(echo $GITHUB_SHA | cut -c1-8)
        REVISION=${BASELINE}.$(date +%Y%m%d-%H%M)-${SHA_ID}
        echo "##[set-output name=revision;]${REVISION}"

    - name: Share $REVISION as Environment Variable
      run: echo "REVISION=${{ steps.revision.outputs.revision }}" >> $GITHUB_ENV

    - name: Print $REVISION
      shell: bash
      run: |
        echo ==============  ENV  =================
        echo REVISION            \: $REVISION
        echo ======================================

    - name: Update Maven version
      shell: bash
      run: |
        mvn versions:set -DnewVersion=$REVISION

    - name: Print pom.xml
      shell: bash
      run: |
        cat pom.xml

    - name: Build with Maven
      shell: bash
      run: |
        mvn install

# uncomment and set environment variables to push to Docker registry
#    - name: Build and Push Docker Image
#      shell: bash
#      run: |
#        mvn -pl webapp -Ddocker jib:build
#      env:
#        DOCKER_REGISTRY_USERNAME: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
#        DOCKER_REGISTRY_PASSWORD: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
